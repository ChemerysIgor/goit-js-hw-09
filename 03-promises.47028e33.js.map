{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAE1BC,YAAW,WACjBH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAOQ,EAAOC,SAASC,cAAe,SACvBD,SAASC,cAAe,UACvCF,EAAKG,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAER,IAAMC,EAAQC,OAAQN,SAASC,cAAe,qBAAoBM,OAClEC,QAAQC,IAAIJ,GACZ,IAAMK,EAAOJ,OAAQN,SAASC,cAAe,oBAAmBM,OAChEC,QAAQC,IAAIC,GACZ,IAAMC,EAASL,OAAQN,SAASC,cAAe,sBAAqBM,OACpEC,QAAQC,IAAIE,GAIV,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BvB,EAAcuB,EAAI,EAAGP,EAAQK,EAAOE,GACjCC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAInDY,EAAMkB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nlet promiseId = null;\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    promiseId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay }); \n      }\n    }, delay);\n  });\n}\n\nconst  form = document.querySelector(`.form`);\nconst submit = document.querySelector(`button`);\nform.addEventListener('submit', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\nconst delay = Number (document.querySelector(`input[name=delay]`).value); \nconsole.log(delay)\nconst step = Number (document.querySelector(`input[name=step]`).value);\nconsole.log(step)\nconst amount = Number (document.querySelector(`input[name=amount]`).value);\nconsole.log(amount)\n\n\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  event.currentTarget.reset();\n  \n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","value","console","log","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.47028e33.js.map"}