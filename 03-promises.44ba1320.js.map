{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAY,KAGhB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCT,EAAYU,YAAW,KACjBH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGb,MAAOQ,EAAOC,SAASC,cAAc,SACtBD,SAASC,cAAc,UACtCF,EAAKG,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAER,MAAMC,EAAQC,OAAQN,SAASC,cAAc,qBAAqBM,OAClEC,QAAQC,IAAIJ,GACZ,MAAMK,EAAOJ,OAAQN,SAASC,cAAc,oBAAoBM,OAChEC,QAAQC,IAAIC,GACZ,MAAMC,EAASL,OAAQN,SAASC,cAAc,sBAAsBM,OACpEC,QAAQC,IAAIE,GAIV,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BvB,EAAcuB,EAAI,EAAGP,EAAQK,EAAOE,GACjCC,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,IAIrDY,EAAMgB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nlet promiseId = null;\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    promiseId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay }); \n      }\n    }, delay);\n  });\n}\nconst  form = document.querySelector(`.form`);\nconst submit = document.querySelector(`button`);\nform.addEventListener('submit', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\nconst delay = Number (document.querySelector(`input[name=delay]`).value); \nconsole.log(delay)\nconst step = Number (document.querySelector(`input[name=step]`).value);\nconsole.log(step)\nconst amount = Number (document.querySelector(`input[name=amount]`).value);\nconsole.log(amount)\n\n\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  event.currentTarget.reset();\n  \n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$promiseId","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","value","console","log","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.44ba1320.js.map"}